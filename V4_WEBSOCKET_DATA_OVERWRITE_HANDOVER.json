{
  "claude_guidelines": {
    "metadata": {
      "versie": "1.0.0",
      "created": "2025-08-07T02:10:00Z",
      "last_updated": "2025-08-07T02:10:00Z",
      "author": "Claude AI",
      "issue": "WebSocket Data Overwriting Problem"
    },
    "language": "nl",
    "meta_prompt": {
      "core_question": "Waarom overschrijft WebSocket connectie de echte API data met NULL/0 waarden?",
      "regels": [
        "NIET de mock data verwijderen - dit maskeert het probleem alleen",
        "NIET de API response times onderzoeken - die werken perfect (15-21ms)",
        "Focus op de WebSocket connection_status event die data overschrijft",
        "Test met browser console open om de exact volgorde van events te zien"
      ]
    },
    "problem_analysis": {
      "symptoom": "Dashboard toont afwisselend echte data (Workers: 1) en mock/null data (Workers: 0/0)",
      "root_cause_identified": "WebSocket connection_status event triggert data update met NULL values",
      "bewijs": {
        "console_logs": [
          "02:02:09 - API: REAL DATA PREVIEW: {workers: 1, active: 1}",
          "02:02:10 - WebSocket connected",
          "02:02:10 - Dashboard data sources: {workers: 'NULL'}"
        ],
        "exact_probleem": "WebSocket notifySubscribers() wordt aangeroepen met connection_status event dat Dashboard interpreteert als data update"
      }
    },
    "technische_context": {
      "architectuur": "V4 Event-Driven Real-time Architecture",
      "data_flow": [
        "1. Browser vraagt /api/admin/ssot (werkt perfect, geeft echte data)",
        "2. WebSocket maakt verbinding op ws://localhost:8765",
        "3. WebSocket stuurt connection_status event",
        "4. Central-data-service.js notifySubscribers() propageert dit naar Dashboard",
        "5. Dashboard.js updateDashboard() interpreteert dit als data update met NULL"
      ],
      "api_performance": {
        "response_time": "15-21ms consistent",
        "data_structure": "dashboard.workers.total = 1, dashboard.workers.active = 1",
        "status": "API werkt perfect, geen issues"
      }
    },
    "critical_files": {
      "central_data_service": {
        "path": "/ui-admin-clean/assets/js/services/central-data-service.js",
        "probleem_regels": [
          "regel 237-240: connection_status event wordt verstuurd",
          "regel 518-532: notifySubscribers() propageert alle events zonder filter",
          "regel 373-383: Mock data fallback (verwarrend maar niet root cause)"
        ],
        "attempted_fix": "regel 520-522: Added filter voor connection_status events"
      },
      "dashboard": {
        "path": "/ui-admin-clean/assets/js/views/Dashboard.js",
        "probleem_regels": [
          "regel 36-38: Subscribe to central data service",
          "regel 151-199: updateDashboard() method dat NULL data accepteert"
        ]
      },
      "websocket_server": {
        "path": "/websockets/websocket_server.py",
        "status": "Draait op port 8765, werkt correct"
      },
      "admin_data_manager": {
        "path": "/services/admin_data_manager.py",
        "status": "Backend service werkt perfect, levert echte data"
      }
    },
    "testing_approach": {
      "reproduce_steps": [
        "1. Open browser console (F12)",
        "2. Navigeer naar http://localhost:8001/admin",
        "3. Observeer console logs tijdens eerste load",
        "4. Let op volgorde: API data -> WebSocket connect -> NULL data",
        "5. Refresh pagina meerdere keren om inconsistentie te zien"
      ],
      "validation": {
        "api_test": "curl http://localhost:8001/api/admin/ssot | grep workers",
        "expected": "workers:{total:1,active:1}",
        "actual_ui": "Toont 0/0 na WebSocket connectie"
      }
    },
    "proposed_solution": {
      "optie_1": {
        "naam": "Filter connection_status events",
        "implementatie": "Skip notifySubscribers() voor type='connection_status'",
        "status": "GeÃ¯mplementeerd maar niet getest"
      },
      "optie_2": {
        "naam": "Separate connection status handler",
        "implementatie": "Aparte callback voor connection events vs data events"
      },
      "optie_3": {
        "naam": "Dashboard validation",
        "implementatie": "Dashboard.updateDashboard() moet NULL data rejecten"
      }
    },
    "top_0_1_perspectief": {
      "analyse": "Dit is een klassiek pub/sub anti-pattern waar control messages (connection status) worden gemengd met data messages",
      "best_practice": "Gebruik separate channels/topics voor verschillende message types",
      "enterprise_solution": "Implement message type discrimination op subscription level"
    },
    "commands": {
      "check_api": "curl -s http://localhost:8001/api/admin/ssot | python -m json.tool | head -50",
      "check_websocket": "ps aux | grep websocket",
      "monitor_logs": "tail -f /var/log/agentos/*.log",
      "test_frontend": "Open browser -> F12 -> Console -> Refresh page"
    },
    "warnings": {
      "mock_data_confusion": "Mock data bestaat in getOptimizedSSoTData() maar is NIET de root cause",
      "api_works_fine": "API werkt perfect, probleem zit in frontend WebSocket handling",
      "dont_remove_fallback_yet": "Verwijder mock data pas NA het fixen van WebSocket issue"
    }
  }
}